{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "synw-upds-jlcg-dev-4s2"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/Create Table Sentence')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-----------------------------------------------\n--Paso 01\n-----------------------------------------------\nSELECT TOP (10) *\nFrom OPENROWSET (BULK '/master/data/sharedknow/badges/*.parquet', --leer todos los parquet dentro del contenedor\nDATA_SOURCE= 'ExternalUPDataSource',\nFORMAT ='PARQUET')  AS [file]\nGO;\n\nSELECT TOP (10) *\nFrom OPENROWSET (BULK '/master/data/sharedknow/comments/*.parquet', --leer todos los parquet dentro del contenedor\nDATA_SOURCE= 'ExternalUPDataSource',\nFORMAT ='PARQUET')  AS [file]\nGO;\n\nSELECT TOP (10) *\nFrom OPENROWSET (BULK '/master/data/sharedknow/linktypes/*.parquet', --leer todos los parquet dentro del contenedor\nDATA_SOURCE= 'ExternalUPDataSource',\nFORMAT ='PARQUET')  AS [file]\nGO;\n\nSELECT TOP (10) *\nFrom OPENROWSET (BULK '/master/data/sharedknow/postlinks/*.parquet', --leer todos los parquet dentro del contenedor\nDATA_SOURCE= 'ExternalUPDataSource',\nFORMAT ='PARQUET')  AS [file]\nGO;\n\nSELECT TOP (10) *\nFrom OPENROWSET (BULK '/master/data/sharedknow/posttypes/*.parquet', --leer todos los parquet dentro del contenedor\nDATA_SOURCE= 'ExternalUPDataSource',\nFORMAT ='PARQUET')  AS [file]\nGO;\n\nSELECT TOP (10) *\nFrom OPENROWSET (BULK '/master/data/sharedknow/users/*.parquet', --leer todos los parquet dentro del contenedor\nDATA_SOURCE= 'ExternalUPDataSource',\nFORMAT ='PARQUET')  AS [file]\nGO;\n\nSELECT TOP (10) *\nFrom OPENROWSET (BULK '/master/data/sharedknow/votes/*.parquet', --leer todos los parquet dentro del contenedor\nDATA_SOURCE= 'ExternalUPDataSource',\nFORMAT ='PARQUET')  AS [file]\nGO;\n\nSELECT TOP (10) *\nFrom OPENROWSET (BULK '/master/data/sharedknow/votetypes/*.parquet', --leer todos los parquet dentro del contenedor\nDATA_SOURCE= 'ExternalUPDataSource',\nFORMAT ='PARQUET')  AS [file]\nGO;\n\n\n-----------------------------------------------\n--Paso 02\n-----------------------------------------------\nCREATE EXTERNAL TABLE master_party.dim_comments4(\n    Id nvarchar(50),\n    CreationDate DATETIME,\n    PostId nvarchar(50),\n    Score nvarchar(50),\n    UserId NVARCHAR(50)\n)\nWITH (\n     LOCATION = '/master/data/sharedknow/comments/*.parquet',\n     DATA_SOURCE = ExternalUPDataSource,  \n     FILE_FORMAT = UPParquetFileFormat\n )\nGO\n\nSELECT TOP(10) * FROM master_party.dim_comments4;\n\n--------------------------------------------------------------\nCREATE EXTERNAL TABLE master_party.badget003(\n    Id nvarchar(50),\n    Name_value nvarchar(50),\n    UserId nvarchar(50),\n    Date_value DATETIME    \n)\nWITH (\n     LOCATION = '/master/data/sharedknow/badges/*.parquet',\n     DATA_SOURCE = ExternalUPDataSource,  \n     FILE_FORMAT = UPParquetFileFormat\n )\nGO\n\nSELECT TOP(100) * FROM master_party.badget003;\n\n--------------------------------------------------------------\nCREATE EXTERNAL TABLE master_party.linktypes(\n    Id nvarchar(50),\n    Type NVARCHAR(100)     \n)\nWITH (\n     LOCATION = '/master/data/sharedknow/linktypes/*.parquet',\n     DATA_SOURCE = ExternalUPDataSource,  \n     FILE_FORMAT = UPParquetFileFormat\n )\nGO\n\nSELECT TOP(100) * FROM master_party.linktypes;\n--------------------------------------------------------------\nCREATE EXTERNAL TABLE master_party.postlinks5(\n    Id nvarchar(50),\n    CreationDate DATETIME,\n    PostId nvarchar(10),\n    RelatedPostId nvarchar(50),\n    LinkTypeld  nvarchar(10)\n)\nWITH (\n     LOCATION = '/master/data/sharedknow/postlinks/*.parquet',\n     DATA_SOURCE = ExternalUPDataSource,  \n     FILE_FORMAT = UPParquetFileFormat\n )\nGO\n\nSELECT TOP(100) * FROM master_party.postlinks5;\n\n\n--------------------------------------------------------------\nCREATE EXTERNAL TABLE master_party.posttypes(\n    Id nvarchar(50),\n    Type nvarchar(50)   \n)\nWITH (\n     LOCATION = '/master/data/sharedknow/posttypes/*.parquet',\n     DATA_SOURCE = ExternalUPDataSource,  \n     FILE_FORMAT = UPParquetFileFormat\n )\nGO\n\nSELECT TOP(10) * FROM master_party.posttypes;\n\n--------------------------------------------------------------\nCREATE EXTERNAL TABLE master_party.users3(\n    Id nvarchar(50),\n    CreationDate DATETIME,\n    DownVotes int,\n    LastAccessDate DATETIME,\n    Reputation int,\n    UpVotes int,\n    Views int,\n    Accountld INT,\n    Email nvarchar(100)\n)\nWITH (\n     LOCATION = '/master/data/sharedknow/users/*.parquet',\n     DATA_SOURCE = ExternalUPDataSource,  \n     FILE_FORMAT = UPParquetFileFormat\n )\nGO\n\nSELECT TOP(10) * FROM master_party.users3;\n\n--------------------------------------------------------------\nCREATE EXTERNAL TABLE master_party.votes4(\n    Id nvarchar(50),\n    PostId nvarchar(50),\n    UserId nvarchar(50),\n    BountyAmount nvarchar(50),\n    VoteTypeId_value int,\n    CreationDate DATETIME    \n  \n)\nWITH (\n     LOCATION = '/master/data/sharedknow/votes/*.parquet',\n     DATA_SOURCE = ExternalUPDataSource,  \n     FILE_FORMAT = UPParquetFileFormat\n )\nGO\n\nSELECT TOP(10) * FROM master_party.votes4;\n\n--------------------------------------------------------------\nCREATE EXTERNAL TABLE master_party.votetypes3(\n    Id nvarchar(50),\n    Name_value nvarchar(100)\n  \n)\nWITH (\n     LOCATION = '/master/data/sharedknow/votetypes/*.parquet',\n     DATA_SOURCE = ExternalUPDataSource,  \n     FILE_FORMAT = UPParquetFileFormat\n )\nGO\n\nSELECT TOP(10) * FROM master_party.votetypes3;\n\n\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "updatalakehouse",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Create Table Sentence_TF')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-----------------------------------------------\n--Paso 01\n-----------------------------------------------\nSELECT TOP (10) *\nFrom OPENROWSET (BULK '/master/data/*.parquet', --leer todos los parquet dentro del contenedor\nDATA_SOURCE= 'ExternalUPDataSource',\nFORMAT ='PARQUET')  AS [file]\nGO;\n-----------------------------------------------\n--Paso 02 Crear la tabla junto con sus campos de acuerdo al tipo de variable\n\n-----------------------------------------------\nCREATE EXTERNAL TABLE master_party.dim_clientes002( \n    CODMES nvarchar(6),\n    Cod_Cliente nvarchar(10),\n    Edad int,\n    Departamento nvarchar(50),\n    Nivel_Educ nvarchar(50),\n    Antiguedad_Laboral int,\n    Tiempo_Direccion_Actual int,\n    Ingreso int,\n    Ratio_Deuda_Ingreso decimal(4,2),\n    Deuda_TC int,\n    Deuda_Otros int,\n    Ratio_Cuota_Ingreso decimal(4,2),\n    Default_Value int\n    )\nWITH (\n     LOCATION = '/master/data/',\n     DATA_SOURCE = ExternalUPDataSource,  \n     FILE_FORMAT = UPParquetFileFormat\n )\nGO\n\nSELECT TOP(10) * FROM master_party.dim_clientes002;\n-----------------------------------------------\n--Paso 03\n-----------------------------------------------\nSELECT * FROM master_party.dim_clientes002\n\n-----------------------------------------------\n--Paso 04 pasamos un select de toda mi tabla y pasamos a otra tabla para su visualizacion\n-----------------------------------------------\nCREATE EXTERNAL TABLE business_knowa.bi_clientes_dim\nWITH (\n    LOCATION = '/business/business_knowa/bi_clientes_tf/',\n    DATA_SOURCE = ExternalUPDataSource,  \n    FILE_FORMAT = UPParquetFileFormat\n) AS \nSELECT TOP(100) * FROM master_party.dim_clientes002;\n\nSELECT * FROM business_knowa.bi_clientes_dim\n-------------------------------------------------------------\n\nWITH ShortCreationTable(shortdate) AS (\nSELECT CONVERT(DATE, SUBSTRING(creation_date, 1,10)) AS shortdate\nFROM master_transaction.t_interaction\n), DistinctDateTable (distinctdate) AS (\nSELECT DISTINCT shortdate as distinctdate\nFROM ShortCreationTable\n)\n\nSELECT ROW_NUMBER() OVER(ORDER BY distinctdate ASC) AS period_id, \ndistinctdate as period,\nYEAR(distinctdate) as year,\nMONTH(distinctdate) as month\nFROM DistinctDateTable;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "updatatrabajofinal",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Initial_Config')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "/*---------------------------------------------\nScript Inicial de UP Lakehouse\n-----------------------------------------------\nAutor: Mauro A. Le√≥n Payano\nFecha: 12/12/2022*/\n-----------------------------------------------\n--Paso 1: Creacion de repositorio de datos\n-----------------------------------------------\nCREATE DATABASE updatalakehouse;\nGO\n\nUSE updatalakehouse;\nGO\n\n-----------------------------------------------\n--Paso 2: Creacion de dataset por zona de datos\n-----------------------------------------------\nCREATE SCHEMA master_transaction AUTHORIZATION dbo;\nGO\n\nCREATE SCHEMA master_party AUTHORIZATION dbo;\nGO\n\nCREATE SCHEMA master_channel AUTHORIZATION dbo;\nGO\n\nCREATE SCHEMA business_knowa AUTHORIZATION dbo;\nGO\n\n-------------------------------------------------------------------------\n--Paso 3: Asignaci√≥n de clave de encriptaci√≥n y formato de tablas externas\n-------------------------------------------------------------------------\nCREATE MASTER KEY ENCRYPTION BY PASSWORD = 'p39248J#asdasdiu89yuj1k23sdpipi'\nGO\n\nCREATE DATABASE SCOPED CREDENTIAL UPUserIdentity WITH IDENTITY = 'SHARED ACCESS SIGNATURE',\nSECRET = '?sv=2021-12-02&ss=bfqt&srt=sco&sp=rwdlacupyx&se=2023-06-30T09:39:32Z&st=2023-04-26T01:39:32Z&spr=https&sig=V2B7Vby5CiaJ6Fh%2FFiJAACclkboPC8PVHIHCAGIzy5g%3D'\nGO\n\nCREATE EXTERNAL DATA SOURCE ExternalUPDataSource\nWITH (\n    LOCATION = 'https://dlsupdsjlcgdev9by.dfs.core.windows.net/',\n    CREDENTIAL = UPUserIdentity\n);\nGO\n\nCREATE EXTERNAL FILE FORMAT UPParquetFileFormat \nWITH (\n    FORMAT_TYPE = PARQUET,\n    DATA_COMPRESSION = 'org.apache.hadoop.io.compress.SnappyCodec'\n);\nGO\n\nCREATE EXTERNAL FILE FORMAT UPDeltaFileFormat\nWITH (\n    FORMAT_TYPE = DELTA\n);\nGO\n\n\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "updatalakehouse",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Initial_Config_TF')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "/*---------------------------------------------\nScript Inicial de UP Lakehouse\n-----------------------------------------------\nAutor: Jose Luis Cacho Guerrero\nFecha: 1/05/23*/\n-----------------------------------------------\n--Paso 1: Creacion de repositorio de datos\n-----------------------------------------------\nCREATE DATABASE updatatrabajofinal; --creamos la base de datos \nGO\n\nUSE updatatrabajofinal; --seleccionamos la base de datos a trabajar \nGO\n\n-----------------------------------------------\n--Paso 2: Creacion de dataset por zona de datos\n-----------------------------------------------\nCREATE SCHEMA master_transaction AUTHORIZATION dbo;\nGO\n\nCREATE SCHEMA master_party AUTHORIZATION dbo;\nGO\n\nCREATE SCHEMA master_channel AUTHORIZATION dbo;\nGO\n\nCREATE SCHEMA business_knowa AUTHORIZATION dbo;\nGO\n\n-------------------------------------------------------------------------\n--Paso 3: Asignaci√≥n de clave de encriptaci√≥n y formato de tablas externas\n-------------------------------------------------------------------------\nCREATE MASTER KEY ENCRYPTION BY PASSWORD = 'p39248J#asdasdiu89yuj1k23sd_tf'\nGO --llave que va a incriptar la informaci√≥n, se usa la llave para ejecutar \n\nCREATE DATABASE SCOPED CREDENTIAL UPUserIdentity WITH IDENTITY = 'SHARED ACCESS SIGNATURE',\nSECRET = '?sv=2021-12-02&ss=bfqt&srt=sco&sp=rwdlacupyx&se=2023-06-30T09:57:40Z&st=2023-05-02T01:57:40Z&spr=https&sig=CyGVnV1z8YyhUECepaHETnjAp2tgStB7p4rn3%2FV6gzs%3D'\nGO -- credencial para unirse con la cuenta de almacenamiento\n\nCREATE EXTERNAL DATA SOURCE ExternalUPDataSource\nWITH (\n    LOCATION = 'https://dlsupdsjlcgdev9by.dfs.core.windows.net/',\n    CREDENTIAL = UPUserIdentity\n);\nGO\n\nCREATE EXTERNAL FILE FORMAT UPParquetFileFormat \nWITH (\n    FORMAT_TYPE = PARQUET,\n    DATA_COMPRESSION = 'org.apache.hadoop.io.compress.SnappyCodec'\n);\nGO\n\nCREATE EXTERNAL FILE FORMAT UPDeltaFileFormat\nWITH (\n    FORMAT_TYPE = DELTA\n);\nGO\n\n\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "updatatrabajofinal",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Preprocessing')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "ApacheNotebook",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "e83c12db-1737-480f-b880-845bee719dca"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/0415ebd8-8cd6-4d2d-9b25-ee1c04ba873a/resourceGroups/rg-upds-jlcg-dev-001/providers/Microsoft.Synapse/workspaces/synw-upds-jlcg-dev-4s2/bigDataPools/ApacheNotebook",
						"name": "ApacheNotebook",
						"type": "Spark",
						"endpoint": "https://synw-upds-jlcg-dev-4s2.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/ApacheNotebook",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.3",
						"nodeCount": 10,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 15
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"import pandas as pd\r\n",
							"import matplotlib.pyplot as plt\r\n",
							"import seaborn as sns\r\n",
							"import statsmodels.api as sm\r\n",
							"\r\n",
							"df = pd.read_parquet('abfss://master@dlsupdsjlcgdev9by.dfs.core.windows.net/data/m_clientes1.parquet', \r\n",
							"storage_options = {'account_key':'SZSdW41bmijR6bKC3ljq2gIIxrcRgLyA/c+eiWWWeyXXOKWXP8GDvXTo2V84rycMxHkBIPQvQCt/+AStSNOUMQ=='})\r\n",
							"df.columns"
						],
						"outputs": [],
						"execution_count": 46
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"group_edad= df.groupby('Nivel_Educ').count()\r\n",
							"group_edad['Edad'].plot(kind='bar')"
						],
						"outputs": [],
						"execution_count": 47
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"group_edad= df.groupby('Nivel_Educ').count()\r\n",
							"group_edad['Default_Value'].plot(kind='bar')"
						],
						"outputs": [],
						"execution_count": 52
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"correlacion = df['Antiguedad_Laboral'].corr(df['Ingreso'])\r\n",
							"print(correlacion)"
						],
						"outputs": [],
						"execution_count": 48
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ApacheNotebook')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"autoPause": {
					"enabled": true,
					"delayInMinutes": 15
				},
				"autoScale": {
					"enabled": true,
					"maxNodeCount": 3,
					"minNodeCount": 3
				},
				"nodeCount": 10,
				"nodeSize": "Small",
				"nodeSizeFamily": "MemoryOptimized",
				"sparkVersion": "3.3",
				"isComputeIsolationEnabled": false,
				"sessionLevelPackagesEnabled": false,
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus2"
		}
	]
}