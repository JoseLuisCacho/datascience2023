{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-upds-jlcg-dev-5tu"
		},
		"ADLSLinkedService_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLSLinkedService'"
		},
		"FileLinkedService_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'FileLinkedService'"
		},
		"ADLSLinkedService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dlsupdsjlcgdev9by.dfs.core.windows.net/"
		},
		"FileLinkedService_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "\\\\DESKTOP-JUJ99J7\\D$\\data"
		},
		"FileLinkedService_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "MicrosoftAccount\\JOSE LUIS"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/business_student_overview')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Demo",
							"value": "Demo"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Demo": {
						"type": "String"
					}
				},
				"folder": {
					"name": "03_business_reports"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-14T00:48:58Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/master_party_core')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DataFlow Tarea",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_sharedknow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"RawDataBadges": {
										"filename": "sk_badges.parquet",
										"appname": "sharedknow",
										"objectname": "badges"
									},
									"Rawlinktypes": {
										"filename": "sk_linktypes.parquet",
										"appname": "sharedknow",
										"objectname": "linktypes"
									},
									"Rawcomments": {
										"filename": "sk_comments.parquet",
										"appname": "sharedknow",
										"objectname": "comments"
									},
									"Rawpostlinks": {
										"filename": "sk_postlinks.parquet",
										"appname": "sharedknow",
										"objectname": "postlinks"
									},
									"Rawposttypes": {
										"filename": "sk_posttypes.parquet",
										"appname": "sharedknow",
										"objectname": "posttypes"
									},
									"Rawusers": {
										"filename": "sk_users.parquet",
										"appname": "sharedknow",
										"objectname": "users"
									},
									"Rawvotes": {
										"filename": "sk_votes.parquet",
										"appname": "sharedknow",
										"objectname": "votes"
									},
									"Rawvotetypes": {
										"filename": "sk_votetypes.parquet",
										"appname": "sharedknow",
										"objectname": "votetypes"
									},
									"MasterBadges": {
										"objectname": "badges",
										"filename": "m_badges.parquet"
									},
									"Masterlinktypes": {
										"objectname": "linktypes",
										"filename": "m_linktypes.parquet"
									},
									"Mastercomments": {
										"objectname": "comments",
										"filename": "m_comments.parquet"
									},
									"Masterpostlinks": {
										"objectname": "postlinks",
										"filename": "m_postlinks.parquet"
									},
									"Masterposttypes": {
										"objectname": "posttypes",
										"filename": "m_posttypes.parquet"
									},
									"Masterusers": {
										"objectname": "users",
										"filename": "m_users.parquet"
									},
									"Mastervotes": {
										"objectname": "votes",
										"filename": "m_votes.parquet"
									},
									"Mastervotetypes": {
										"objectname": "votetypes",
										"filename": "m_votetypes.parquet"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Demo": {
						"type": "String"
					}
				},
				"folder": {
					"name": "02_master_models"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-14T00:48:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_sharedknow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/master_transaction_core')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Demo",
							"value": "Demo"
						}
					},
					{
						"name": "Data flow Clientes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_trabajofinal",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"RawClientes": {
										"appname": "trabajofinal",
										"objectname": "clientes",
										"fileName": "archivo1.parquet"
									},
									"MasterClientes": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Demo": {
						"type": "String"
					}
				},
				"folder": {
					"name": "02_master_models"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-14T00:48:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_trabajofinal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/raw_ga4_core')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Comments",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Users",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_csv_pipe",
								"type": "DatasetReference",
								"parameters": {
									"filename": "sk_comments.csv",
									"appname": "sharedknow",
									"objectname": "comments"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "sk_comments.parquet",
									"appname": "sharedknow",
									"objectname": "comments"
								}
							}
						]
					},
					{
						"name": "Copy linktypes",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Comments",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_csv_pipe",
								"type": "DatasetReference",
								"parameters": {
									"filename": "sk_linktypes.csv",
									"appname": "sharedknow",
									"objectname": "linktypes"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "sk_linktypes.parquet",
									"appname": "sharedknow",
									"objectname": "linktypes"
								}
							}
						]
					},
					{
						"name": "Copy postlinks",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy linktypes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_csv_pipe",
								"type": "DatasetReference",
								"parameters": {
									"filename": "sk_postlinks.csv",
									"appname": "sharedknow",
									"objectname": "postlinks"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "sk_postlinks.parquet",
									"appname": "sharedknow",
									"objectname": "postlinks"
								}
							}
						]
					},
					{
						"name": "Copy posttypes",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy postlinks",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_csv_pipe",
								"type": "DatasetReference",
								"parameters": {
									"filename": "sk_posttypes.csv",
									"appname": "sharedknow",
									"objectname": "posttypes"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "sk_posttypes.parquet",
									"appname": "sharedknow",
									"objectname": "posttypes"
								}
							}
						]
					},
					{
						"name": "Copy votes",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy posttypes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_csv_pipe",
								"type": "DatasetReference",
								"parameters": {
									"filename": "sk_votes.csv",
									"appname": "sharedknow",
									"objectname": "votes"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "sk_votes.parquet",
									"appname": "sharedknow",
									"objectname": "votes"
								}
							}
						]
					},
					{
						"name": "Copy votetypes",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy votes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_csv_pipe",
								"type": "DatasetReference",
								"parameters": {
									"filename": "sk_votetypes.csv",
									"appname": "sharedknow",
									"objectname": "votetypes"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "sk_votetypes.parquet",
									"appname": "sharedknow",
									"objectname": "votetypes"
								}
							}
						]
					},
					{
						"name": "Copy Users",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Badges",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_csv_pipe",
								"type": "DatasetReference",
								"parameters": {
									"filename": "sk_users.csv",
									"appname": "sharedknow",
									"objectname": "users"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "sk_users.parquet",
									"appname": "sharedknow",
									"objectname": "users"
								}
							}
						]
					},
					{
						"name": "Copy Badges",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Post_copy2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_csv_pipe",
								"type": "DatasetReference",
								"parameters": {
									"filename": "sk_badges.csv",
									"appname": "sharedknow",
									"objectname": "badges"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "sk_badges.parquet",
									"appname": "sharedknow",
									"objectname": "badges"
								}
							}
						]
					},
					{
						"name": "Copy Post1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_csv_pipe",
								"type": "DatasetReference",
								"parameters": {
									"filename": "2008-01-01\\sk_posts_200801.csv",
									"appname": "sharedknow",
									"objectname": "posts"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "2008-01-01\\sk_posts_200801.parquet",
									"appname": "sharedknow",
									"objectname": "posts"
								}
							}
						]
					},
					{
						"name": "Copy Post_copy2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Post1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_csv_pipe",
								"type": "DatasetReference",
								"parameters": {
									"filename": "2009-01-01\\sk_posts_200901.csv",
									"appname": "sharedknow",
									"objectname": "posts"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "2009-01-01\\sk_posts_200901.parquet",
									"appname": "sharedknow",
									"objectname": "posts"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Demo": {
						"type": "String"
					}
				},
				"folder": {
					"name": "01_raw_source"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-14T00:48:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_source_csv_pipe')]",
				"[concat(variables('factoryId'), '/datasets/ds_target_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/raw_know_core')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Demo",
							"value": "Demo"
						}
					},
					{
						"name": "Copy Users",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_csv_pipe",
								"type": "DatasetReference",
								"parameters": {
									"filename": "sk_users.csv",
									"appname": "sharedknow",
									"objectname": "users"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "sk_users.parquet",
									"appname": "sharedknow",
									"objectname": "users"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Demo": {
						"type": "String"
					}
				},
				"folder": {
					"name": "01_raw_source"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-14T00:48:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_source_csv_pipe')]",
				"[concat(variables('factoryId'), '/datasets/ds_target_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/raw_trabajofinal')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata Clientes",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_source_csv_tf",
								"type": "DatasetReference",
								"parameters": {
									"appname": "trabajofinal",
									"objectname": "clientes",
									"fileName": "archivo1.csv"
								}
							},
							"fieldList": [
								"itemName",
								"itemType",
								"lastModified"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Copy Clientes",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get Metadata Clientes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_csv_tf",
								"type": "DatasetReference",
								"parameters": {
									"appname": "trabajofinal",
									"objectname": "clientes",
									"fileName": "archivo1.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_target_parquet_tf",
								"type": "DatasetReference",
								"parameters": {
									"appname": "trabajofinal",
									"objectname": "clientes",
									"fileName": "archivo1.parquet"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "01_raw_source"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_source_csv_tf')]",
				"[concat(variables('factoryId'), '/datasets/ds_target_parquet_tf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_master_source_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"objectname": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().objectname,'/',dataset().filename)",
							"type": "Expression"
						},
						"folderPath": "data/sharedknow",
						"fileSystem": "master"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_master_source_parquet_tf')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "m_clientes1.parquet",
						"folderPath": "data",
						"fileSystem": "master"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_source_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					},
					"appname": {
						"type": "string"
					},
					"objectname": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": {
							"value": "@concat(dataset().objectname,'/',dataset().filename)",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().appname",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FileLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_source_csv_pipe')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					},
					"appname": {
						"type": "string"
					},
					"objectname": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": {
							"value": "@concat(dataset().objectname,'/',dataset().filename)",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().appname",
							"type": "Expression"
						}
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FileLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_source_csv_tf')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"appname": {
						"type": "string"
					},
					"objectname": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(dataset().appname,'/',dataset().objectname)",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FileLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_target_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					},
					"appname": {
						"type": "string"
					},
					"objectname": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().appname,'/',dataset().objectname,'/',dataset().filename)",
							"type": "Expression"
						},
						"folderPath": "data",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_target_parquet_tf')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"appname": {
						"type": "string"
					},
					"objectname": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().appname,'/',dataset().objectname,'/',dataset().fileName)",
							"type": "Expression"
						},
						"folderPath": "data",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLSLinkedService_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLSLinkedService_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('FileLinkedService_properties_typeProperties_host')]",
					"userId": "[parameters('FileLinkedService_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('FileLinkedService_password')]"
					}
				},
				"connectVia": {
					"referenceName": "IRLocaljlcg01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IRLocaljlcg01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IRLocaljlcg01')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_sharedknow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference"
							},
							"name": "RawDataBadges"
						},
						{
							"dataset": {
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference"
							},
							"name": "Rawlinktypes"
						},
						{
							"dataset": {
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference"
							},
							"name": "Rawcomments"
						},
						{
							"dataset": {
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference"
							},
							"name": "Rawpostlinks"
						},
						{
							"dataset": {
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference"
							},
							"name": "Rawposttypes"
						},
						{
							"dataset": {
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference"
							},
							"name": "Rawusers"
						},
						{
							"dataset": {
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference"
							},
							"name": "Rawvotes"
						},
						{
							"dataset": {
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference"
							},
							"name": "Rawvotetypes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_source_parquet",
								"type": "DatasetReference"
							},
							"name": "MasterBadges"
						},
						{
							"dataset": {
								"referenceName": "ds_master_source_parquet",
								"type": "DatasetReference"
							},
							"name": "Masterlinktypes"
						},
						{
							"dataset": {
								"referenceName": "ds_master_source_parquet",
								"type": "DatasetReference"
							},
							"name": "Mastercomments"
						},
						{
							"dataset": {
								"referenceName": "ds_master_source_parquet",
								"type": "DatasetReference"
							},
							"name": "Masterpostlinks"
						},
						{
							"dataset": {
								"referenceName": "ds_master_source_parquet",
								"type": "DatasetReference"
							},
							"name": "Masterposttypes"
						},
						{
							"dataset": {
								"referenceName": "ds_master_source_parquet",
								"type": "DatasetReference"
							},
							"name": "Masterusers"
						},
						{
							"dataset": {
								"referenceName": "ds_master_source_parquet",
								"type": "DatasetReference"
							},
							"name": "Mastervotes"
						},
						{
							"dataset": {
								"referenceName": "ds_master_source_parquet",
								"type": "DatasetReference"
							},
							"name": "Mastervotetypes"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "derivedColumn2"
						},
						{
							"name": "derivedColumn3"
						},
						{
							"name": "derivedColumn4"
						},
						{
							"name": "derivedColumn5"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Id as string,",
						"          Name as string,",
						"          UserId as string,",
						"          Date as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> RawDataBadges",
						"source(output(",
						"          Id as string,",
						"          Type as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> Rawlinktypes",
						"source(output(",
						"          Id as string,",
						"          CreationDate as string,",
						"          PostId as string,",
						"          Score as string,",
						"          UserId as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> Rawcomments",
						"source(output(",
						"          Id as string,",
						"          CreationDate as string,",
						"          PostId as string,",
						"          RelatedPostId as string,",
						"          LinkTypeId as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> Rawpostlinks",
						"source(output(",
						"          Id as string,",
						"          Type as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> Rawposttypes",
						"source(output(",
						"          Id as string,",
						"          CreationDate as string,",
						"          DownVotes as string,",
						"          LastAccessDate as string,",
						"          Reputation as string,",
						"          UpVotes as string,",
						"          Views as string,",
						"          AccountId as string,",
						"          Email as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> Rawusers",
						"source(output(",
						"          Id as string,",
						"          PostId as string,",
						"          UserId as string,",
						"          BountyAmount as string,",
						"          VoteTypeId as string,",
						"          CreationDate as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> Rawvotes",
						"source(output(",
						"          Id as string,",
						"          Name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> Rawvotetypes",
						"RawDataBadges derive(Date = toTimestamp(Date)) ~> derivedColumn1",
						"Rawcomments derive(CreationDate = toTimestamp(CreationDate)) ~> derivedColumn2",
						"Rawpostlinks derive(CreationDate = toTimestamp(CreationDate)) ~> derivedColumn3",
						"Rawusers derive(CreationDate = toTimestamp(CreationDate),",
						"          LastAccessDate = toTimestamp(LastAccessDate),",
						"          Views = toInteger(Views),",
						"          DownVotes = toInteger(DownVotes),",
						"          Reputation = toInteger(Reputation),",
						"          UpVotes = toInteger(UpVotes)) ~> derivedColumn4",
						"Rawvotes derive(CreationDate = toTimestamp(CreationDate)) ~> derivedColumn5",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     filePattern:'m_badges[n].parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> MasterBadges",
						"Rawlinktypes sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     filePattern:'m_linktypes[n].parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Masterlinktypes",
						"derivedColumn2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     filePattern:'m_comments[n].parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Mastercomments",
						"derivedColumn3 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     filePattern:'m_postlinks[n].parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Masterpostlinks",
						"Rawposttypes sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     filePattern:'m_posttypes[n].parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Masterposttypes",
						"derivedColumn4 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     filePattern:'m_users[n].parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Masterusers",
						"derivedColumn5 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     filePattern:'m_votes[n].parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Mastervotes",
						"Rawvotetypes sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     filePattern:'m_votetypes[n].parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Mastervotetypes"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_target_parquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_source_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_trabajofinal')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_target_parquet_tf",
								"type": "DatasetReference"
							},
							"name": "RawClientes",
							"description": "Leer información Raw dentro Blob Containers."
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_source_parquet_tf",
								"type": "DatasetReference"
							},
							"name": "MasterClientes"
						}
					],
					"transformations": [
						{
							"name": "TranformacionDatos"
						},
						{
							"name": "EmptyFiltrer"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CODMES as string,",
						"          Cod_Cliente as string,",
						"          Edad as string,",
						"          Departamento as string,",
						"          Nivel_Educ as string,",
						"          {Antigüedad_Laboral} as string,",
						"          Tiempo_Direccion_Actual as string,",
						"          Ingreso as string,",
						"          Ratio_Deuda_Ingreso as string,",
						"          Deuda_TC as string,",
						"          Deuda_Otros as string,",
						"          Ratio_Cuota_Ingreso as string,",
						"          Default as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> RawClientes",
						"select1 derive(Edad = toInteger(Edad),",
						"          Antiguedad_Laboral = toInteger(Antiguedad_Laboral),",
						"          Tiempo_Direccion_Actual = toInteger(Tiempo_Direccion_Actual),",
						"          Ingreso = toInteger(Ingreso),",
						"          Ratio_Deuda_Ingreso = toDecimal(Ratio_Deuda_Ingreso),",
						"          Deuda_TC = toInteger(Deuda_TC),",
						"          Deuda_Otros = toInteger(Deuda_Otros),",
						"          Ratio_Cuota_Ingreso = toDecimal(Ratio_Cuota_Ingreso),",
						"          Default_Value = toInteger(Default_Value)) ~> TranformacionDatos",
						"TranformacionDatos filter(!(isNull(Cod_Cliente))) ~> EmptyFiltrer",
						"RawClientes select(mapColumn(",
						"          CODMES,",
						"          Cod_Cliente,",
						"          Edad,",
						"          Departamento,",
						"          Nivel_Educ,",
						"          Antiguedad_Laboral = {Antigüedad_Laboral},",
						"          Tiempo_Direccion_Actual,",
						"          Ingreso,",
						"          Ratio_Deuda_Ingreso,",
						"          Deuda_TC,",
						"          Deuda_Otros,",
						"          Ratio_Cuota_Ingreso,",
						"          Default_Value = Default",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"EmptyFiltrer sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     filePattern:'m_clientes[n].parquet',",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> MasterClientes"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_target_parquet_tf')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_source_parquet_tf')]"
			]
		}
	]
}